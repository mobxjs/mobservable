{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Simple, scalable state management",
    "docs": {
      "best/actions": {
        "title": "Writing asynchronous actions",
        "sidebar_label": "async actions & flows"
      },
      "best/decorators": {
        "title": "How to (not) use decorators",
        "sidebar_label": "How to (not) use decorator syntax"
      },
      "best/devtools": {
        "title": "MobX + React DevTools",
        "sidebar_label": "MobX + React DevTools"
      },
      "best/pitfalls": {
        "title": "Common pitfalls & best practices",
        "sidebar_label": "Common Pitfalls & Best Practices"
      },
      "best/react-performance": {
        "title": "Optimizing rendering React components",
        "sidebar_label": "Optimizing React components"
      },
      "best/react": {
        "title": "What does MobX react to?",
        "sidebar_label": "Understanding what MobX reacts to"
      },
      "best/stateless-HMR": {
        "title": "Hot Module Reloading with Stateless Components",
        "sidebar_label": "Hot Module Reloading with Stateless Components"
      },
      "best/store": {
        "title": "Best Practices for building large scale maintainable projects",
        "sidebar_label": "Defining data stores"
      },
      "best/trace": {
        "title": "Using `trace` for debugging",
        "sidebar_label": "Using trace for debugging"
      },
      "faq/faq": {
        "title": "FAQ",
        "sidebar_label": "Frequently Asked Questions"
      },
      "intro/concepts": {
        "title": "Concepts & Principles",
        "sidebar_label": "Concepts & Principles"
      },
      "intro/overview": {
        "title": "The gist of MobX",
        "sidebar_label": "The gist of MobX"
      },
      "LINKS": {
        "title": "LINKS"
      },
      "README": {
        "title": "Introduction",
        "sidebar_label": "One page summary"
      },
      "refguide/action": {
        "title": "action",
        "sidebar_label": "action"
      },
      "refguide/api": {
        "title": "MobX Api Reference",
        "sidebar_label": "API overview"
      },
      "refguide/array": {
        "title": "Observable Arrays",
        "sidebar_label": "arrays"
      },
      "refguide/autorun": {
        "title": "autorun",
        "sidebar_label": "autorun"
      },
      "refguide/boxed": {
        "title": "Boxed Values",
        "sidebar_label": "boxed values"
      },
      "refguide/computed-decorator": {
        "title": "(@)computed",
        "sidebar_label": "(@)computed"
      },
      "refguide/create-transformer": {
        "title": "createTransformer",
        "sidebar_label": "mobxUtils.createTransformer"
      },
      "refguide/expr": {
        "title": "refguide/expr",
        "sidebar_label": "mobxUtils.expr"
      },
      "refguide/extend-observable": {
        "title": "refguide/extend-observable",
        "sidebar_label": "extendObservable"
      },
      "refguide/extending": {
        "title": "refguide/extending",
        "sidebar_label": "createAtom"
      },
      "refguide/inject": {
        "title": "provider_inject",
        "sidebar_label": "Provider / inject"
      },
      "refguide/map": {
        "title": "Observable Maps",
        "sidebar_label": "maps"
      },
      "refguide/mobx-utils": {
        "title": "refguide/mobx-utils",
        "sidebar_label": "MobX-utils"
      },
      "refguide/modifiers": {
        "title": "Modifiers",
        "sidebar_label": "modifiers"
      },
      "refguide/object-api": {
        "title": "Object api",
        "sidebar_label": "Object api"
      },
      "refguide/object": {
        "title": "Observable Objects",
        "sidebar_label": "objects"
      },
      "refguide/observable-decorator": {
        "title": "@observable",
        "sidebar_label": "@observable"
      },
      "refguide/observable": {
        "title": "observable",
        "sidebar_label": "observable"
      },
      "refguide/observe": {
        "title": "Intercept & Observe",
        "sidebar_label": "intercept & observe"
      },
      "refguide/observer-component": {
        "title": "(@)observer components",
        "sidebar_label": "(@)observer components"
      },
      "refguide/reaction": {
        "title": "reaction",
        "sidebar_label": "reaction"
      },
      "refguide/spy": {
        "title": "Spy",
        "sidebar_label": "spy"
      },
      "refguide/tojson": {
        "title": "toJS",
        "sidebar_label": "toJS"
      },
      "refguide/when": {
        "title": "when",
        "sidebar_label": "when"
      }
    },
    "links": {
      "Documentation": "Documentation",
      "Github": "Github"
    },
    "categories": {
      "Introduction": "Introduction",
      "Making things observable": "Making things observable",
      "Reacting to observables": "Reacting to observables",
      "Updating observables": "Updating observables",
      "Utilities": "Utilities",
      "Tips & Tricks": "Tips & Tricks"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
